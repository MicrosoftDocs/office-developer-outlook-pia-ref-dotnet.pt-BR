<Type Name="InspectorEvents_10_Event" FullName="Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1194b1f0b61ad8f4626aab81e241dac5cce1074" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27897675" /></Metadata><TypeSignature Language="C#" Value="public interface InspectorEvents_10_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract InspectorEvents_10_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event" />
  <TypeSignature Language="VB.NET" Value="Public Interface InspectorEvents_10_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class InspectorEvents_10_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComEventInterface(typeof(Microsoft.Office.Interop.Outlook.InspectorEvents_10), typeof(Microsoft.Office.Interop.Outlook.InspectorEvents_10_EventProvider))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="77761-p101">This is a .NET interface created when processing a COM coclass that is required by managed code for interoperability with the corresponding COM object. This interface implements all events of earlier interfaces and any additional new events. Use this interface only when the event you want to use shares the same name as a method of the COM object; in this case, cast to this interface to connect to the event, and cast to the primary interface to call the method. Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span><span class="sxs-lookup"><span data-stu-id="77761-p101">This is a .NET interface created when processing a COM coclass that is required by managed code for interoperability with the corresponding COM object. This interface implements all events of earlier interfaces and any additional new events. Use this interface only when the event you want to use shares the same name as a method of the COM object; in this case, cast to this interface to connect to the event, and cast to the primary interface to call the method. Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_ActivateEventHandler Activate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_ActivateEventHandler Activate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.Activate" />
      <MemberSignature Language="VB.NET" Value="Event Activate As InspectorEvents_10_ActivateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_ActivateEventHandler ^ Activate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-105">Ocorre quando um inspetor torna-se a janela ativa, como resultado de uma ação do usuário ou de um código de programa.</span><span class="sxs-lookup"><span data-stu-id="77761-105">Occurs when an inspector becomes the active window, either as a result of user action or through program code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachmentSelectionChange">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_AttachmentSelectionChangeEventHandler AttachmentSelectionChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_AttachmentSelectionChangeEventHandler AttachmentSelectionChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.AttachmentSelectionChange" />
      <MemberSignature Language="VB.NET" Value="Event AttachmentSelectionChange As InspectorEvents_10_AttachmentSelectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_AttachmentSelectionChangeEventHandler ^ AttachmentSelectionChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_AttachmentSelectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-106">Ocorre quando o usuário seleciona um anexo diferente ou adicional de um item no inspetor ativo, de maneira programática ou pela interação com a interface de usuário.</span><span class="sxs-lookup"><span data-stu-id="77761-106">Occurs when the user selects a different or additional attachment of an item in the active inspector programmatically or by interacting with the user interface.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-107">O evento <b>AttachmentSelectionChange</b> é acionado quando um anexo diferente ou adicional do item é selecionado no Inspetor.</span><span class="sxs-lookup"><span data-stu-id="77761-107">The <b>AttachmentSelectionChange</b> event fires when a different or additional attachment of the item is selected in the inspector.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeMaximize">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMaximizeEventHandler BeforeMaximize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMaximizeEventHandler BeforeMaximize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.BeforeMaximize" />
      <MemberSignature Language="VB.NET" Value="Event BeforeMaximize As InspectorEvents_10_BeforeMaximizeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_BeforeMaximizeEventHandler ^ BeforeMaximize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMaximizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-108">Ocorre quando um inspetor é maximizado pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="77761-108">Occurs when an inspector is maximized by the user.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-109">Esse evento pode ser cancelado depois de iniciado.</span><span class="sxs-lookup"><span data-stu-id="77761-109">This event can be cancelled after it has started.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeMinimize">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMinimizeEventHandler BeforeMinimize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMinimizeEventHandler BeforeMinimize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.BeforeMinimize" />
      <MemberSignature Language="VB.NET" Value="Event BeforeMinimize As InspectorEvents_10_BeforeMinimizeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_BeforeMinimizeEventHandler ^ BeforeMinimize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMinimizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-110">Ocorre quando o inspetor ativo é minimizado pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="77761-110">Occurs when the active inspector is minimized by the user.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-111">Esse evento pode ser cancelado depois de iniciado.</span><span class="sxs-lookup"><span data-stu-id="77761-111">This event can be cancelled after it has started.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeMove">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMoveEventHandler BeforeMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMoveEventHandler BeforeMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.BeforeMove" />
      <MemberSignature Language="VB.NET" Value="Event BeforeMove As InspectorEvents_10_BeforeMoveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_BeforeMoveEventHandler ^ BeforeMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeMoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-112">Ocorre quando o <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> é movido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="77761-112">Occurs when the <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> is moved by the user.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-113">Esse evento pode ser cancelado depois de iniciado.</span><span class="sxs-lookup"><span data-stu-id="77761-113">This event can be cancelled after it has started.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSize">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeSizeEventHandler BeforeSize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeSizeEventHandler BeforeSize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.BeforeSize" />
      <MemberSignature Language="VB.NET" Value="Event BeforeSize As InspectorEvents_10_BeforeSizeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_BeforeSizeEventHandler ^ BeforeSize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_BeforeSizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-114">Ocorre quando o usuário dimensiona o atual <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />.</span><span class="sxs-lookup"><span data-stu-id="77761-114">Occurs when the user sizes the current <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-p102">Esse evento pode ser cancelado depois de iniciado. Se ele for cancelado, a janela não será dimensionada.</span><span class="sxs-lookup"><span data-stu-id="77761-p102">This event can be cancelled after it has started. If the event is cancelled, the window is not sized.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_CloseEventHandler Close;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_CloseEventHandler Close" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.Close" />
      <MemberSignature Language="VB.NET" Value="Event Close As InspectorEvents_10_CloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_CloseEventHandler ^ Close;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_CloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-117">Ocorre quando o inspetor associado a um item do Microsoft Outlook está sendo fechado.</span><span class="sxs-lookup"><span data-stu-id="77761-117">Occurs when the inspector associated with a Microsoft Outlook item is being closed.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-118">Se você usar o <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Close(Microsoft.Office.Interop.Outlook.OlInspectorClose)" /> método para acionar esse evento, ele só poderá ser cancelado se o método <b>Close</b> usar o argumento <b>olPromptForSave</b> .</span><span class="sxs-lookup"><span data-stu-id="77761-118">If you use the <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Close(Microsoft.Office.Interop.Outlook.OlInspectorClose)" /> method to fire this event, it can only be canceled if the <b>Close</b> method uses the <b>olPromptForSave</b> argument.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Event Deactivate As InspectorEvents_10_DeactivateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_DeactivateEventHandler ^ Deactivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-119">Ocorre quando um objeto Inspector deixa de ser a janela ativa, como resultado de uma ação do usuário ou de um código de programa.</span><span class="sxs-lookup"><span data-stu-id="77761-119">Occurs when an inspector stops being the active window, either as a result of user action or through program code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageChange">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Interop.Outlook.InspectorEvents_10_PageChangeEventHandler PageChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Outlook.InspectorEvents_10_PageChangeEventHandler PageChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Interop.Outlook.InspectorEvents_10_Event.PageChange" />
      <MemberSignature Language="VB.NET" Value="Event PageChange As InspectorEvents_10_PageChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Office::Interop::Outlook::InspectorEvents_10_PageChangeEventHandler ^ PageChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.InspectorEvents_10_PageChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77761-120">Ocorre quando a página do formulário ativo é alterada, programaticamente ou por ação do usuário, em um <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="77761-120">Occurs when the active form page changes, either programmatically or by user action, on an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object.</span></span></summary>
        <remarks><para><span data-ttu-id="77761-121">Ocorrerá um erro se o manipulador de eventos para este evento chama tanto o <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Close(Microsoft.Office.Interop.Outlook.OlInspectorClose)" /> ou <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.SetCurrentFormPage(System.String)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="77761-121">An error occurs if the event handler for this event calls either the <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Close(Microsoft.Office.Interop.Outlook.OlInspectorClose)" /> or <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.SetCurrentFormPage(System.String)" /> methods.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>