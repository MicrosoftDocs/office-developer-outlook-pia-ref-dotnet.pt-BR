<Type Name="Application" FullName="Microsoft.Office.Interop.Outlook.Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da09d35d132ed58e324bfd41c114fa38d39760a8" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20630230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Application : Microsoft.Office.Interop.Outlook._Application, Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Application implements class Microsoft.Office.Interop.Outlook._Application, class Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface Application&#xA;Implements _Application, ApplicationEvents_11_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Application : Microsoft::Office::Interop::Outlook::_Application, Microsoft::Office::Interop::Outlook::ApplicationEvents_11_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._Application</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.ApplicationClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063001-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f2bd5-101">Representa todo o aplicativo do Outlook.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2bd5-101">Represents the entire Outlook application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="f2bd5-102">
        <para>Esta é uma interface .NET derivada uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente. Use esta interface derivada para acessar todos os membros de evento, propriedade e método do objeto COM. Entretanto, se um método ou evento que você deseja usar compartilhar o mesmo nome sob o mesmo objeto de COM, cast à interface principal correspondente para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento. Consulte este tópico para obter informações sobre o objeto COM. Para obter informações sobre os método e a propriedade membros do objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook._Application" />. Para obter informações sobre os membros de evento do objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />.</para>
        <para>Este é o único objeto na hierarquia que pode ser retornada usando o <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" /> método ou da função intrínseca do Visual Basic <b>GetObject</b> .</para>
        <para>Objeto do Outlook o <b>aplicativo</b> tem várias finalidades:</para>
        <list type="bullet">
          <item>
            <para>Como objeto raiz, permite acesso a outros objetos da hierarquia do Outlook.</para>
          </item>
          <item>
            <para>Permite acesso direto a um novo item criado usando <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />, sem precisar percorrer a hierarquia do objeto.</para>
          </item>
          <item>
            <para>Permite acesso a objetos da interface ativa (o explorer e o inspector).</para>
          </item>
        </list>
        <para>Ao usar automação para controlar o Microsoft Outlook de outro aplicativo, use o método <b>CreateObject</b> para criar um objeto <b>Application</b> .</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f2bd5-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._Application" />. For information about the event members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />.</para>
          <para>This is the only object in the hierarchy that can be returned by using the <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />  method or the intrinsic Visual Basic <b>GetObject</b> function.</para>
          <para>The Outlook <b>Application</b> object has several purposes:</para>
          <list type="bullet">
            <item>
              <para>As the root object, it allows access to other objects in the Outlook hierarchy.</para>
            </item>
            <item>
              <para>It allows direct access to a new item created by using <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />, without having to traverse the object hierarchy.</para>
            </item>
            <item>
              <para>It allows access to the active interface objects (the explorer and the inspector).</para>
            </item>
          </list>
          <para>When you use Automation to control Microsoft Outlook from another application, you use the <b>CreateObject</b> method to create an Outlook <b>Application</b> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>