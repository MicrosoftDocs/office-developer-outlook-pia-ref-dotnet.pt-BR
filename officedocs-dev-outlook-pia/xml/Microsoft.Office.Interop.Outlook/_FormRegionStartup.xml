<Type Name="_FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook._FormRegionStartup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34bd4c4bdf22fffb31f02727f5872c4371b275f" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27904578" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa é uma interface principal em uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente. Use esta interface principal somente quando o método que você deseja usar compartilha o mesmo nome de um evento do objeto COM; Nesse caso, é convertida nessa interface para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento. Caso contrário, use a interface do .NET que é derivada do co-classe COM para acessar os métodos, propriedades e eventos do objeto COM. Para obter informações sobre o objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeFormRegionShow">
      <MemberSignature Language="C#" Value="public void BeforeFormRegionShow (Microsoft.Office.Interop.Outlook.FormRegion FormRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeFormRegionShow([in]class Microsoft.Office.Interop.Outlook.FormRegion FormRegion) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeFormRegionShow(Microsoft::Office::Interop::Outlook::FormRegion ^ FormRegion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegion" Type="Microsoft.Office.Interop.Outlook.FormRegion" />
      </Parameters>
      <Docs>
        <param name="FormRegion">O objeto <b>FormRegion</b> representando a área de formulário que deve ser exibido.</param>
        <summary>Permite que um suplemento atualize a interface de usuário de uma área de formulário antes que ela seja exibida.</summary>
        <remarks><para>Esse método permite que o Outlook passe o objeto <b>FormRegion</b> para o suplemento e permite que um suplemento atualizar a interface do usuário da região do formulário antes que seja exibido para que, por exemplo, o texto dos rótulos pode ser alterado ou conteúdo irrelevante pode ser suprimido. Ele é chamado depois que os controles são instanciados e o layout é calculado, mas antes do formulário região é feito visível.</para>
          <para>Ao implementar esse método, tenha em mente que o item obtido do <paramref name="FormRegion" /> parâmetro (ou seja, o <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> propriedade do objeto <b>FormRegion</b> ) é somente leitura.</para>
          <para>Para obter exemplos de suplementos no c# e Visual Basic .NET que implementem <b>FormRegionStartup</b>, consulte downloads de exemplo de código em MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionIcon">
      <MemberSignature Language="C#" Value="public object GetFormRegionIcon (string FormRegionName, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionIcon([in]string FormRegionName, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionIcon (FormRegionName As String, LCID As Integer, Icon As OlFormRegionIcon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionIcon(System::String ^ FormRegionName, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionIcon Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="Icon" Type="Microsoft.Office.Interop.Outlook.OlFormRegionIcon" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">O nome da região do formulário usado ao registrar a região do formulário no Registro do Windows.</param>
        <param name="LCID">A ID do local que identifica o idioma usado pelo Outlook no momento. Esse valor é usado para obter as cadeias de caracteres de localização correspondentes a esse idioma a partir da região do formulário.</param>
        <param name="Icon">A constant that identifies the type of icon.</param>
        <summary>Obtains an icon image that will be displayed for a particular type of icon for the form region.</summary>
        <returns>Um <b>objeto</b> que é uma matriz de bytes que representa os bytes originais do arquivo de imagem ou um objeto <b>IPictureDisp</b> .</returns>
        <remarks><para>Esse método deve ser implementado por um suplemento e chamado pelo Outlook. Como parte do <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, esse método e a <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> método fornecem um mecanismo através do qual um suplemento pode registrar uma área de formulário e oferece o Outlook com o manifesto XML e os ícones para a região do formulário.</para>
          <para>Se você gostaria de um suplemento para fornecer ícones para uma área de formulário, especifique o ProgID do suplemento ao registrar a região de formulário no registro do Windows. Para obter mais informações sobre como registrar uma área de formulário, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Especificando áreas de formulário no registro do Windows</a><b>GetFormRegionManifest</b> e os métodos de <b>GetFormRegionIcon</b> da interface <b>FormRegionStartup</b> . </para>
          <para>No manifesto XML para a área de formulário, sob o elemento de ícones, especifique o suplemento do valor para cada um dos elementos filhos onde você gostaria de usar um ícone personalizado.  Implementar <b>GetFormRegionIcon</b> , de forma que, quando o Outlook passa a esse tipo de ícone como um argumento para <paramref name="Icon" />, <b>GetFormRegionIcon</b> retorna a imagem do ícone personalizado. Se desejar que o Outlook exiba o ícone padrão, implemente <b>GetFormRegionIcon</b> , de forma que ele retorna <b>Nothing</b> (uma referência nula (Nothing no Visual Basic) em c#) para aquele tipo de ícone. <b>GetFormRegionIcon</b> também deve retornar <b>nada</b> (uma referência nula (Nothing no Visual Basic) em c#) quando <paramref name="Icon" /> é <b>olFormRegionIconDefault</b>.</para>
          <para> When Outlook starts, it reads the list of form regions from the Windows registry and caches the data associated with the form regions. If a form region has been registered with a ProgID, Outlook will resort to the corresponding add-in by calling its implementation of <b>GetFormRegionIcon</b> for any icon in the XML manifest that has addin as the value of a child element of the icons element. Note that if you do not specify any ProgID in the Windows registry, Outlook will not call the  <b>GetFormRegionManifest</b> and <b>GetFormRegionIcon</b> methods.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionManifest">
      <MemberSignature Language="C#" Value="public object GetFormRegionManifest (string FormRegionName, int LCID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionManifest([in]string FormRegionName, [in]int32 LCID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionManifest (FormRegionName As String, LCID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionManifest(System::String ^ FormRegionName, int LCID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">O nome da região do formulário usado ao registrar a região do formulário no Registro do Windows.</param>
        <param name="LCID">A ID do local que identifica o idioma usado pelo Outlook no momento. Esse valor é usado para obter as cadeias de caracteres de localização correspondentes a esse idioma a partir da região do formulário.</param>
        <summary>Obtém o manifesto XML de uma região de formulário.</summary>
        <returns>Um <b>objeto</b> que representa o manifesto XML para uma região do formulário. Esta cadeia de caracteres XML inclui características da região do formulário como o nome de exibição (como especificado pelo elemento title), qualquer arquivo de layout associado ou suplemento, quaisquer ações do usuário com suporte e qualquer cadeia de caracteres de localização. O XML deve seguir o esquema XML de região de formulário. Para obter mais informações sobre o esquema XML de região de formulário, consulte a referência de esquema XML do Microsoft Outlook 2010 na <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Biblioteca MSDN</a></returns>
        <remarks><para>Esse método deve ser implementado por um suplemento e chamado pelo Outlook. Como parte do <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, esse método e a <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> método fornecem um mecanismo através do qual um suplemento pode registrar uma área de formulário e fornecer Outlook o manifesto XML e os ícones para a região do formulário.</para>
          <para>Se você gostaria de um suplemento para fornecer o manifesto XML para uma área de formulário, especifique o ProgID do add-in ao registrar a região de formulário no registro do Windows. Para obter mais informações sobre como registrar uma área de formulário, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Especificando áreas de formulário no registro do Windows</a>método de<b>GetFormRegionManifest</b> da interface <b>FormRegionStartup</b> . Observe que, se você não especificar qualquer ProgID no registro do Windows, o Outlook não serão chamar este método.</para>
          <para>O uso de um suplemento para fornecer que o manifesto XML para uma região do formulário também significa que você está permitindo que o suplemento fornecer nenhum ícone para a área de formulário. O suplemento também deve implementar o <b>GetFormRegionIcon</b> da interface <b>FormRegionStartup</b>. Outlook chamará <b>GetFormRegionIcon</b> para obter qualquer suplemento especificados ícones para a região do formulário. Para obter mais informações sobre como usar um suplemento para especificar ícones, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87934">como: usar um suplemento para especificar ícones para uma região do formulário</a></para>
          <para> Quando o Outlook for iniciado, ele lê a lista de regiões de formulário do registro do Windows e o armazena em cache os dados. Com base nesses dados, se o Outlook avisos que um suplemento foi especificado para fornecer o manifesto XML para uma área de formulário, o Outlook usará o ProgID fornecido nos dados de cache e chame o método <b>GetFormRegionManifest</b> implementado por este suplemento para obter o XML que ele precisa exibir a área de formulário. Se o manifesto XML não é válido e não está de acordo com o esquema XML de região de formulário, o Outlook não poderão carregar a região do formulário. Além disso, se você não especificar qualquer ProgID no registro do Windows, o Outlook não chame os métodos <b>GetFormRegionManifest</b> e <b>GetFormRegionIcon</b> .</para>
          <para>O Outlook ignora os seguintes elementos quando o suplemento fornece o manifesto XML: </para>
          <list type="bullet">
            <item>
              <para>nome: Outlook ignora o valor especificado para esse elemento e usará o nome especificado para a área de formulário no registro.</para>
            </item>
            <item>
              <para>layoutFile: o Outlook ignora esse elemento, pois um suplemento está estendendo essa região do formulário.</para>
            </item>
            <item>
              <para>addin: o Outlook usa o valor precedido por um sinal de igual (=) no Registro como ProgID do suplemento.</para>
            </item>
            <item>
              <para>atributo File do stringOverride: Outlook ignora qualquer arquivo de localização secundária especificado pelo elemento stringOverride. O suplemento pode implementar <b>GetFormRegionManifest</b> para retornar o manifesto XML para a localização de cadeia de caracteres para especificado de embutida <paramref name="LCID" />, ou gerenciar localização de cadeia de caracteres de outra forma, por exemplo, usando a localização do .NET Framework e depois retornamos o apropriado manifesto XML para especificado <paramref name="LCID" />.</para>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionStorage">
      <MemberSignature Language="C#" Value="public object GetFormRegionStorage (string FormRegionName, object Item, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionStorage([in]string FormRegionName, [in]object Item, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionStorage (FormRegionName As String, Item As Object, LCID As Integer, FormRegionMode As OlFormRegionMode, FormRegionSize As OlFormRegionSize) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionStorage(System::String ^ FormRegionName, System::Object ^ Item, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode, Microsoft::Office::Interop::Outlook::OlFormRegionSize FormRegionSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64310)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="FormRegionMode" Type="Microsoft.Office.Interop.Outlook.OlFormRegionMode" />
        <Parameter Name="FormRegionSize" Type="Microsoft.Office.Interop.Outlook.OlFormRegionSize" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">O nome interno da região do formulário. Isso pode ser indicado pela &lt;nome&gt; tag no manifesto XML da região de formulário correspondente.</param>
        <param name="Item">O objeto de item do Outlook que causou o carregamento da área de formulário.</param>
        <param name="LCID">A identificação de idioma local.</param>
        <param name="FormRegionMode">O modo no qual a área de formulário está sendo carregada. Ele é uma constante na enumeração OlFormRegionMode.</param>
        <param name="FormRegionSize">O tipo da área de formulário carregada, adjacente ou separada.  Ele é uma constante na enumeração OlFormRegionSize.</param>
        <summary>Obtém o armazenamento apropriado para uma área de formulário baseada nas informações especificadas.</summary>
        <returns>Um <b>objeto</b> representando o armazenamento que Outlook alocado para a região de formulário. O tipo do valor de retorno pode ser: <b>cadeia de caracteres</b> (<b>cadeia de caracteres</b> em c#) representando que o valor de retorno é um caminho local para um armazenamento de formulário do Outlook (. Arquivo OFS); <b>Byte ()</b> representando que o valor de retorno é uma matriz de bytes que contém o conteúdo da. Arquivo OFS; <b>IStorage</b> representando o valor de retorno é um objeto de armazenamento COM <b>IStorage</b> (para C++ somente); <b>Nothing</b> ou <b>Nulo</b>, representando que o Outlook não foi possível alocar armazenamento para essa região do formulário e não será carregado para a região do formulário.</returns>
        <remarks><para>O suplemento deve verificar o valor de retorno de <b>GetFormRegionStorage</b>. Uma região do formulário não será carregado se qualquer um dos seguintes for verdadeiro para o armazenamento retornado:</para>
          <list type="bullet">
            <item>
              <para>O armazenamento retornado é um arquivo .OFS especificado com um caminho não-local.</para>
            </item>
            <item>
              <para>O armazenamento retornado é um arquivo mas não um arquivo .OFS salvo a partir do criador de formulários.</para>
            </item>
          </list>
          <para>Para obter exemplos de suplementos no c# e Visual Basic .NET que implementem as <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, consulte downloads de exemplo de código em MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
