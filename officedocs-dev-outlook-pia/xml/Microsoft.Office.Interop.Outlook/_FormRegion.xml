<Type Name="_FormRegion" FullName="Microsoft.Office.Interop.Outlook._FormRegion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="170a1d134f5a487d0a43dde3247d20e4b029e8bb" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902268" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegion" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegion" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006305A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2a631-101">Essa é uma interface principal em uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente.</span><span class="sxs-lookup"><span data-stu-id="2a631-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="2a631-102">Use esta interface principal somente quando o método que você deseja usar compartilha o mesmo nome de um evento do objeto COM; Nesse caso, é convertida nessa interface para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento.</span><span class="sxs-lookup"><span data-stu-id="2a631-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="2a631-103">Caso contrário, use a interface do .NET que é derivada do co-classe COM para acessar os métodos, propriedades e eventos do objeto COM.</span><span class="sxs-lookup"><span data-stu-id="2a631-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="2a631-104">Para obter informações sobre o objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span><span class="sxs-lookup"><span data-stu-id="2a631-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-105">Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> que representa o aplicativo do Outlook para o objeto pai do objeto.</span><span class="sxs-lookup"><span data-stu-id="2a631-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="2a631-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-106">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-107">Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indicando a classe do objeto.</span><span class="sxs-lookup"><span data-stu-id="2a631-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="2a631-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-109">Retorna ou define uma <b>cadeia de caracteres</b> (<b>cadeia de caracteres</b> em c#) representando o texto exibido em tempo de execução no cabeçalho após o nome de exibição de uma região de formulário adjacente.</span><span class="sxs-lookup"><span data-stu-id="2a631-109">Returns or sets a <b>String</b> (<b>string</b> in C#) representing the text displayed at runtime in the header after the display name of an adjoining form region.</span></span> <span data-ttu-id="2a631-110">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="2a631-110">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-p105">A propriedade <b>Detail</b> é exibida para adjoining somente áreas de formulário. Ele é ignorado para áreas de formulário separadas.</span><span class="sxs-lookup"><span data-stu-id="2a631-p105">The <b>Detail</b> property is displayed for adjoining form regions only. It is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="2a631-p106">A propriedade <b>Detail</b> é opcional para uma região de formulário adjacente.</span><span class="sxs-lookup"><span data-stu-id="2a631-p106">The <b>Detail</b> property is optional for an adjoining form region. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-114">Retorna uma <b>cadeia de caracteres</b> (<b>cadeia de caracteres</b> em c#) que representa o nome de exibição da região do formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-114">Returns a <b>String</b> (<b>string</b> in C#) representing the display name of the form region.</span></span> <span data-ttu-id="2a631-115">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-115">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-116">O nome para exibição é opcional para uma região do formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-116">The display name is optional for a form region.</span></span> <span data-ttu-id="2a631-117">Se você tiver definido um valor para o &lt;formRegionName&gt; marca em correspondente arquivo área de formulário manifesto XML, esse valor será mapeado para o valor da propriedade <b>DisplayName</b> .</span><span class="sxs-lookup"><span data-stu-id="2a631-117">If you have defined a value for the &lt;formRegionName&gt; tag in the corresponding form region manifest XML file, this value will map to the value of the <b>DisplayName</b> property.</span></span> <span data-ttu-id="2a631-118">Para obter mais informações sobre o esquema XML de regiões de formulário, consulte a referência de esquema XML do Microsoft Outlook 2010 na <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Biblioteca MSDN</a></span><span class="sxs-lookup"><span data-stu-id="2a631-118">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="2a631-119">O valor da propriedade <b>DisplayName</b> é exibido em tempo de execução na guia Exibir da faixa de opções Fluent do Microsoft Office para uma região de formulário separada ou no cabeçalho de uma região de formulário adjacente.</span><span class="sxs-lookup"><span data-stu-id="2a631-119">The value of the <b>DisplayName</b> property is displayed at runtime in the Show tab of the Microsoft Office Fluent ribbon for a separate form region, or in the header of an adjoining form region.</span></span>  <span data-ttu-id="2a631-120">Ele é usado para a localidade padrão e podem ser substituído pelo &lt;stringOverride&gt; marca na região manifesto XML arquivo de formulário correspondente.</span><span class="sxs-lookup"><span data-stu-id="2a631-120">It is used for the default locale, and can be overridden by the &lt;stringOverride&gt; tag in the corresponding form region manifest XML file.</span></span> <span data-ttu-id="2a631-121">A cadeia de caracteres diferencia maiúsculas de minúsculas e seu tamanho máximo é de 256 caracteres.</span><span class="sxs-lookup"><span data-stu-id="2a631-121">The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoLayout">
      <MemberSignature Language="C#" Value="public bool EnableAutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.EnableAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-122">Retorna ou define um <b>Boolean</b> (<b>bool</b> em c#) que especifica se é necessário usar o layout automático redimensionamento recurso durante a criação de regiões de formulário no designer de formulários.</span><span class="sxs-lookup"><span data-stu-id="2a631-122">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether to use the automatic layout resizing feature when designing form regions in the forms designer.</span></span> <span data-ttu-id="2a631-123">Leitura/gravação</span><span class="sxs-lookup"><span data-stu-id="2a631-123">Read/write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-p111">O recurso de redimensionamento automático de layout no designer de formulários recalcula o layout do formulário dinamicamente quando o formulário é redimensionado. Este recurso somente está disponível para regiões do formulário no criador de formulários.</span><span class="sxs-lookup"><span data-stu-id="2a631-p111">The automatic layout resizing feature in the forms designer recalculates the form layout dynamically as the form is resized. This feature is only available to form regions in the forms designer.</span></span></para>
          <para><span data-ttu-id="2a631-126">Quando essa propriedade for <b>True</b>, o designer de formulários executa o redimensionamento de layout automático.</span><span class="sxs-lookup"><span data-stu-id="2a631-126">When this property is <b>True</b>, the forms designer performs automatic layout resizing.</span></span>  <span data-ttu-id="2a631-127">Quando essa propriedade for <b>False</b>, o designer de formulários não executa o redimensionamento de layout automático.</span><span class="sxs-lookup"><span data-stu-id="2a631-127">When this property is <b>False</b>, the forms designer does not perform automatic layout resizing.</span></span>  <span data-ttu-id="2a631-128">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="2a631-128">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public object Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Form" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Form { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-p113">Retorna um <b>objeto</b> que representa o objeto <b>MSForms.UserForm</b>. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-p113">Returns an <b>Object</b> representing the <b>MSForms.UserForm</b> object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormRegionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.FormRegionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormRegionMode As OlFormRegionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode { Microsoft::Office::Interop::Outlook::OlFormRegionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlFormRegionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-p114">Retorna uma constante de <b>OlFormRegionMode</b> que indica se a área de formulário está em uma página de leitura, página de redação ou painel de leitura. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-p114">Returns an <b>OlFormRegionMode</b> constant that indicates whether the form region is in a read page, compose page, or Reading Pane. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-133">Se o usuário tiver um item de email no painel de leitura, você pode usar o <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> propriedade para determinar se o usuário está no modo de edição ou no modo de leitura do painel de leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-133">If the user has a mail item in the Reading Pane, you can use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> property to further determine if the user is in the edit mode or the read mode of the Reading Pane.</span></span> <span data-ttu-id="2a631-134">A exibição de um item de correio no Painel de Leitura é diferente quando ele está no modo de edição (o item de correio está na pasta Rascunho) e quando ele está no modo de leitura (o item de correio está nas pastas Caixa de Entrada ou Enviados).</span><span class="sxs-lookup"><span data-stu-id="2a631-134">A mail item is displayed differently in the Reading Pane if it is in the edit mode (the mail item is in the Draft folder) than if it is in the read mode (the mail item is in the Inbox or Sent folder).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector Inspector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspector Inspector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Inspector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspector As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspector ^ Inspector { Microsoft::Office::Interop::Outlook::Inspector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-135">Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objeto representando o Inspetor que hospeda a região do formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-135">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object representing the Inspector that hosts the form region.</span></span> <span data-ttu-id="2a631-136">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-136">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-137">Retorna <b>Nothing</b> (uma referência nula (Nothing no Visual Basic) em c#) se a região de formulário é exibida no painel de leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-137">Returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) if the form region is displayed in the Reading Pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-138">Retorna uma <b>cadeia de caracteres</b> (<b>cadeia de caracteres</b> em c#) que representa o nome programático interno da região do formulário, como definido no manifesto da região de formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-138">Returns a <b>String</b> (<b>string</b> in C#) that represents the internal programmatic name of the form region as defined in the manifest for the form region.</span></span> <span data-ttu-id="2a631-139">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-139">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-140">O nome interno é necessário para uma região do formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-140">The internal name is required for a form region.</span></span> <span data-ttu-id="2a631-141">O &lt;nome&gt; marca em correspondente arquivo área de formulário manifesto XML mapeia para o valor da propriedade <b>InternalName</b> .</span><span class="sxs-lookup"><span data-stu-id="2a631-141">The &lt;name&gt; tag in the corresponding form region manifest XML file maps to the value of the <b>InternalName</b> property.</span></span> <span data-ttu-id="2a631-142">Para obter mais informações sobre o esquema XML de regiões de formulário, consulte a referência de esquema XML do Microsoft Outlook 2010 na <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Biblioteca MSDN</a></span><span class="sxs-lookup"><span data-stu-id="2a631-142">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="2a631-p119">O valor da propriedade <b>InternalName</b> é usado pelo suplemento ou Microsoft Outlook para referir-se à região de formulário, por exemplo, para determinar qual região do formulário está sendo carregado ou para carregar as cadeias de caracteres a partir dos recursos de cadeia de caracteres localizada. A propriedade <b>InternalName</b> suporta apenas caracteres ASCII. A cadeia de caracteres diferencia maiúsculas de minúsculas e seu tamanho máximo é de 256 caracteres.</span><span class="sxs-lookup"><span data-stu-id="2a631-p119">The value of the <b>InternalName</b> property is used by the add-in or Microsoft Outlook to refer to the form region, for example, to determine which form region is being loaded or to load strings from the localized string resources. The <b>InternalName</b> property supports only ASCII characters. The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-146">Retorna um <b>Boolean</b> (<b>bool</b> em c#) que indica se a área de formulário será expandida.</span><span class="sxs-lookup"><span data-stu-id="2a631-146">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the form region is expanded.</span></span> <span data-ttu-id="2a631-147">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-148">Essa propriedade se aplica apenas às áreas de formulário adjacentes e é ignorada para áreas de formulário separadas.</span><span class="sxs-lookup"><span data-stu-id="2a631-148">This property applies to adjoining form regions only and is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="2a631-149">Outlook sempre primeiro carrega uma área de formulário em um estado expandida e define <b>IsExpanded</b> como <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="2a631-149">Outlook always first loads a form region in an expanded state and sets <b>IsExpanded</b> to <b>True</b>.</span></span> <span data-ttu-id="2a631-150">Se o estado inicial da região do formulário é a ser recolhido, então Outlook fecha imediatamente a região de formulário, dispara o <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> evento com o <paramref name="Expand" /> parâmetro sendo <b>False</b>e define <b>IsExpanded</b> como <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="2a631-150">If the initial state of the form region is to be collapsed, then Outlook immediately closes the form region, fires the <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> event with the <paramref name="Expand" /> parameter being <b>False</b>, and sets  <b>IsExpanded</b> to <b>False</b>.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-p122">Retorna um <b>objeto</b> correspondente ao item associado à região de formulário do Outlook. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-p122">Returns an <b>Object</b> corresponding to the Outlook item bound to the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public int Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Language { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-153">Retorna um valor <b>inteiro</b> (<b>int</b> em c#) que indica o LCID do idioma atual.</span><span class="sxs-lookup"><span data-stu-id="2a631-153">Returns an <b>Integer</b> (<b>int</b> in C#) value that indicates the LCID for the current language.</span></span> <span data-ttu-id="2a631-154">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-154">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-p124">Retorna o <b>objeto</b> da região do formulário pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-p124">Returns the parent <b>Object</b> of the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflow">
      <MemberSignature Language="C#" Value="public void Reflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reflow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Reflow" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reflow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reflow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a631-157">Faz com que o Outlook calcule novamente a altura de uma área de formulário adjacente para exibir todos os controles visíveis na área de formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-157">Causes Outlook to recalculate the height of an adjoining form region to display all  the visible controls in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="2a631-p125">O método <b>Reflow</b> só se aplica ao formulário adjacente. Nenhuma ação ocorre para áreas de formulário separadas.</span><span class="sxs-lookup"><span data-stu-id="2a631-p125">The <b>Reflow</b> method only applies to adjoining form regions. No action occurs for separate form regions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a631-160">Torna ativa a área de formulário de forma que ela se torne visível.</span><span class="sxs-lookup"><span data-stu-id="2a631-160">Makes the form region the active form region such that it becomes visible.</span></span></summary>
        <remarks><para><span data-ttu-id="2a631-p126">Se a área de formulário for uma região de formulário adjacente, em seguida, <b>Selecione</b> será expandir a região de formulário (se não já estiver expandido) e definir o foco no primeiro controle na página. Se a área de formulário é uma região de formulário separadas e não ainda estiver na página ativa, então <b>Selecione</b> será switch à região de formulário de página e definir o foco no primeiro controle na página. Se a área de formulário é uma região de formulário separadas e já está na página ativa, em seguida, nada acontece.</span><span class="sxs-lookup"><span data-stu-id="2a631-p126">If the form region is an adjoining form region, then <b>Select</b> will expand the form region (if it is not already expanded) and set focus on the first control on that page. If the form region is a separate form region and is not already the active page, then <b>Select</b> will swtich to the form region page and set focus on the first control on that page. If the form region is a separate form region and is already the active page, then nothing happens.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-164">Retorna o <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para a sessão atual.</span><span class="sxs-lookup"><span data-stu-id="2a631-164">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="2a631-165">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2a631-165">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-166">A propriedade <b>Session</b> e o <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método pode ser usado de forma intercambiável para obter o objeto <b>NameSpace</b> para a sessão atual.</span><span class="sxs-lookup"><span data-stu-id="2a631-166">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="2a631-167">Ambos os membros têm a mesma finalidade.</span><span class="sxs-lookup"><span data-stu-id="2a631-167">Both members serve the same purpose.</span></span> <span data-ttu-id="2a631-168">Por exemplo, os seguintes pares de instruções executam a mesma função:</span><span class="sxs-lookup"><span data-stu-id="2a631-168">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetControlItemProperty">
      <MemberSignature Language="C#" Value="public void SetControlItemProperty (object Control, string PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetControlItemProperty([in]object Control, [in]string PropertyName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.SetControlItemProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetControlItemProperty (Control As Object, PropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetControlItemProperty(System::Object ^ Control, System::String ^ PropertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Object" />
        <Parameter Name="PropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="2a631-169">Um controle na área de formulário para o qual a propriedade especificada por <paramref name="PropertyName" /> será vinculada.</span><span class="sxs-lookup"><span data-stu-id="2a631-169">A control in the form region to which the property specified by <paramref name="PropertyName" /> will be bound.</span></span></param>
        <param name="PropertyName"><span data-ttu-id="2a631-170">O nome da propriedade que será vinculada ao controle.</span><span class="sxs-lookup"><span data-stu-id="2a631-170">The name of the property that will be bound to the control.</span></span></param>
        <summary><span data-ttu-id="2a631-171">Vincula uma propriedade interna explícita ou uma propriedade personalizada a um controle na área de formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-171">Binds an explicit  built-in property or a custom property to a control in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="2a631-p129">Você pode usar esse método para vincular uma propriedade interna explícita ou uma propriedade personalizada a um controle. Você deve fazer referência a propriedade pelo seu nome de cadeia de caracteres, por exemplo, <b>assunto</b> e não pelo namespace, por exemplo, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span><span class="sxs-lookup"><span data-stu-id="2a631-p129">You can use this method to bind an explicit built-in property or a custom property to a control. You must reference the property by its string name, for example, <b>Subject</b>, and not by namespace, for example, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span></span></para>
          <para><span data-ttu-id="2a631-174">O <paramref name="PropertyName" /> parâmetro não diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="2a631-174">The <paramref name="PropertyName" /> parameter is not case-sensitive.</span></span> <span data-ttu-id="2a631-175">Por exemplo, <b>SetControlItemProperty</b> interpreta um argumento, <b>CustomerId</b>, para ser o mesmo que <b>CustomerID</b> e vincula o controle especificado a interno <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2a631-175">For example, <b>SetControlItemProperty</b> interprets an argument, <b>CustomerId</b>, to be the same as <b>CustomerID</b> and binds the specified control to the built-in <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> property.</span></span></para>
          <para><span data-ttu-id="2a631-176">Diferente de usando o método <b>SetControlItemProperty</b> de um <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> do objeto, você também pode usar o código semelhante ao seguinte para vincular uma propriedade, como a propriedade <b>Subject</b> a um controle:</span><span class="sxs-lookup"><span data-stu-id="2a631-176">Other than using the <b>SetControlItemProperty</b> method of a <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object, you can also use code similar to the following to bind a property such as the  <b>Subject</b> property to a control:</span></span></para>
          <code>myPage.Controls("bar").ItemProperty = "subject"</code>
          <code>myPage.Controls("bar").ItemProperty = "subject";</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressControlReplacement">
      <MemberSignature Language="C#" Value="public bool SuppressControlReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressControlReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.SuppressControlReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressControlReplacement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressControlReplacement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-177">Retorna ou define um <b>Boolean</b> (<b>bool</b> em c#) que desabilita que o Outlook substituir automaticamente um controle do Forms 2.0 por um controle do Outlook com temas no tempo de execução e no tempo de design.</span><span class="sxs-lookup"><span data-stu-id="2a631-177">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that disables Outlook from automatically replacing  a Forms 2.0 control by  a themed Outlook control at design time and runtime.</span></span> <span data-ttu-id="2a631-178">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="2a631-178">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-179">Para obter mais informações sobre o Outlook substituir automaticamente um controle do Forms 2.0 por um controle de equivalente com tema do Outlook, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87823">controles em um formulário personalizado</a></span><span class="sxs-lookup"><span data-stu-id="2a631-179">For more information on Outlook automatically replacing a Forms 2.0 control by  a themed Outlook counterpart control, see <a href="http://go.microsoft.com/fwlink/?LinkId=87823">Controls in a Custom Form</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a631-180">Retorna ou define um <see cref="T:System.Boolean" /> (<b>bool</b> para c#) valor que indica se a área de formulário é visível ou oculto.</span><span class="sxs-lookup"><span data-stu-id="2a631-180">Returns or sets a <see cref="T:System.Boolean" /> (<b>bool</b> for C#) value that indicates whether the form region is visible or hidden.</span></span> <span data-ttu-id="2a631-181">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="2a631-181">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a631-p133">
            <b>True</b> se a área de formulário estiver visível; <b>False</b> se estiver oculto. O padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="2a631-p133">
            <b>True</b> if the form region is visible; <b>False</b> if it is hidden. The default is <b>True</b>. </span></span></para>
          <para><span data-ttu-id="2a631-184">Use a propriedade <b>Visible</b> para controlar o acesso às informações sem exibi-la em uma região do formulário.</span><span class="sxs-lookup"><span data-stu-id="2a631-184">Use the <b>Visible</b> property to control access to information without displaying it in a form region.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
