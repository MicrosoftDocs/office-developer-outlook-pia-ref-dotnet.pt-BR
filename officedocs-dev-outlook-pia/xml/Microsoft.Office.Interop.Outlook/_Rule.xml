<Type Name="_Rule" FullName="Microsoft.Office.Interop.Outlook._Rule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fc7984ff84a0eea00858aa8ce56abf24313ff68" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902793" /></Metadata><TypeSignature Language="C#" Value="public interface _Rule" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Rule" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Rule" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Rule" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Rule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630CD-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa é uma interface principal em uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente. Use esta interface principal somente quando o método que você deseja usar compartilha o mesmo nome de um evento do objeto COM; Nesse caso, é convertida nessa interface para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento. Caso contrário, use a interface do .NET que é derivada do co-classe COM para acessar os métodos, propriedades e eventos do objeto COM. Para obter informações sobre o objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.Rule" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleActions Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleActions Actions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As RuleActions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleActions ^ Actions { Microsoft::Office::Interop::Outlook::RuleActions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.RuleActions" /> objeto da coleção que representa todas as ações de regra disponíveis para a regra. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>Você pode enumerar e habilitar regras com qualquer ação de regra que suportam as regras e alertas assistente, mas você pode criar programaticamente as regras que têm apenas as ações de regra mais comumente usadas e não em qualquer ação de regra que as regras e alertas assistente oferece suporte. Para obter mais informações sobre o suporte de ação de regra, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87797">Especificar ações de regra</a></para>
          <para>Por meio da propriedade de <b>ações</b>, cada regra é associada um objeto <b>RuleActions</b>. O conjunto <b>RuleActions</b> é um objeto fixo - você não pode adicionar ou remover itens dessa coleção. Ações de regra que são habilitadas na regra terá uma ação de regra habilitado na coleção <b>RuleActions</b>. Regra de ações que não estiverem habilitadas na regra terá uma ação de regra nesta coleção que tem o <see cref="P:Microsoft.Office.Interop.Outlook._RuleAction.Enabled" /> propriedade definida como <b>False</b>. Ações de regra que não são suportadas durante a criação programática só podem ser enumeradas na coleção <b>RuleActions</b> de uma regra existente, mas porque o conjunto <b>RuleActions</b> é fixa, você não pode criar uma regra e adicionar tal ação à coleção <b>RuleActions</b> associada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> que representa o aplicativo do Outlook para o objeto pai do objeto. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indicando a classe do objeto. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleConditions Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleConditions Conditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As RuleConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleConditions ^ Conditions { Microsoft::Office::Interop::Outlook::RuleConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64297)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.RuleConditions" /> objeto da coleção que representa todas as condições de regra disponíveis para a regra. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>Uma condição de uma regra afirma a condição sob a qual a regra deve ser aplicada. Ambas as <b>condições</b> e <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Exceptions" /> propriedades compartilham o mesmo pool das condições e retornar um objeto da coleção <b>RuleConditions</b> correspondente.</para>
          <para>Programaticamente, você pode enumerar e habilitar regras com qualquer condição de regra que suportam as regras e alertas assistente, mas você pode criar regras que possuem somente as condições de regra mais comumente usadas e não em qualquer condição de regra que suporta as regras e alertas assistente. Para obter mais informações sobre o suporte de condição de regra, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Especificando condições de regra</a></para>
          <para>Por meio da propriedade <b>condições</b>, cada regra é associada um objeto <b>RuleConditions</b>. A coleção <b>RuleConditions</b> é um objeto fixo - você não pode adicionar ou remover itens dessa coleção. Condições de regra que são habilitadas na regra terá uma condição de regra habilitado na coleção <b>RuleConditions</b>. Regra de condições que não estiverem habilitadas na regra terá uma condição de regra nesta coleção que tem o <see cref="P:Microsoft.Office.Interop.Outlook._RuleCondition.Enabled" /> propriedade definida como <b>False</b>. Condições de regra que não são suportadas durante a criação programática só podem ser enumeradas na coleção <b>RuleConditions</b> de uma regra existente, mas porque o conjunto <b>RuleConditions</b> é fixa, você não pode criar uma regra e adicionar dessas condições à coleção <b>RuleConditions</b> associada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna ou define um valor <b>booleano</b> (<b>bool</b> em c#) que determina se a regra deve ser aplicada. Leitura/gravação.</summary>
        <value>To be added.</value>
        <remarks><para>Definindo a propriedade <b>Enabled</b> de uma regra não garante que a regra será habilitada. A regra está habilitada somente após <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> é executado com êxito.</para>
          <para>Usando <b>Rule.Enabled</b> e <b>rules. Save</b> aplica a regra de forma consistente e mantém as regras além da sessão atual. Habilitar uma regra (que tenha sido salva com êxito) garante que a regra será aplicada. Se for uma regra de cliente local, a regra será aplicada quando o Outlook está em execução e se a regra for uma regra baseada em servidor, ela será aplicada independentemente se o Outlook estiver sendo executado. Se você não ativar a regra, em seguida, a regra é definida, mas ela não será aplicada. No entanto, você pode usar <see cref="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" /> para aplicar uma regra como uma operação individual independentemente se a regra está habilitada.  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Exceptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleConditions Exceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleConditions Exceptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Exceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exceptions As RuleConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleConditions ^ Exceptions { Microsoft::Office::Interop::Outlook::RuleConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Outlook.RuleConditions" /> objeto da coleção que representa todas as condições de exceção de regra disponíveis para a regra. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>Uma condição de exceção de uma regra afirma a condição sob a qual a regra não deve ser aplicada. Tanto o <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Conditions" /> e as propriedades de <b>exceções</b> compartilham o mesmo pool das condições e retornam um objeto da coleção <b>RuleConditions</b> correspondente.</para>
          <para>Você pode enumerar e habilitar regras com qualquer condição de exceção de regra que suportam as regras e alertas assistente, mas você pode criar programaticamente as regras que têm apenas o mais comumente usados condições de exceção de regra e não em qualquer exceção de regra da condição que o Regras e alertas Assistente suporta. Para obter mais informações sobre o suporte de condição de regra, consulte <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Especificando condições de regra</a></para>
          <para>Por meio da propriedade <b>condições</b>, cada regra é associada um objeto <b>RuleConditions</b>. A coleção <b>RuleConditions</b> é um objeto fixo - você não pode adicionar ou remover itens dessa coleção. As condições de exceção de regra que são habilitadas na regra terá uma condição de exceção de regra habilitado na coleção <b>RuleConditions</b>. Regra de condições de exceção que não estiverem habilitadas na regra terá uma condição de exceção de regra nesta coleção que tem o <see cref="P:Microsoft.Office.Interop.Outlook._RuleCondition.Enabled" /> propriedade definida como <b>False</b>. Condições de exceção de regra que não são suportadas durante a criação programática só podem ser enumeradas na coleção <b>RuleConditions</b> de uma regra existente, mas porque o conjunto <b>RuleConditions</b> é fixa, você não pode criar uma regra e adicionar tal uma condição de exceção à coleção <b>RuleConditions</b> associada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object ShowProgress, object Folder, object IncludeSubfolders, object RuleExecuteOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute([in]object ShowProgress, [in]object Folder, [in]object IncludeSubfolders, [in]object RuleExecuteOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (Optional ShowProgress As Object, Optional Folder As Object, Optional IncludeSubfolders As Object, Optional RuleExecuteOption As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowProgress" Type="System.Object" />
        <Parameter Name="Folder" Type="System.Object" />
        <Parameter Name="IncludeSubfolders" Type="System.Object" />
        <Parameter Name="RuleExecuteOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowProgress"><b>True</b> para exibir a caixa de diálogo de progresso quando a regra é executada, <b>False</b> para executar a regra sem exibir a caixa de diálogo.</param>
        <param name="Folder">Representa a pasta em que a regra será aplicada.</param>
        <param name="IncludeSubfolders"><b>True</b> para aplicar a regra às subpastas da pasta indicado pelo parâmetro Folder; <b>False</b> para aplicar a regra apenas àquela pasta e não às suas subpastas.</param>
        <param name="RuleExecuteOption">Representa se a regra deve ser aplicada para mensagens lidas, não lidas ou todas as mensagens na(s) pasta(s) especificada(s) pelos parâmetros Folder e IncludeSubfolders.</param>
        <summary>Aplica uma regra como uma operação individual.</summary>
        <remarks><para>Use <see cref="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" /> para aplicar uma regra como uma operação individual independentemente se <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Enabled" /> for <b>verdadeira</b>. Use <b>Rule.Enabled</b> e <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> se você deseja aplicar a regra de forma consistente e persistir as regras além da sessão atual.</para>
          <para>Os parâmetros para o método <b>Execute</b> são opcionais. Se você não especificar nenhum parâmetro, a regra será aplicada a todas as mensagens na caixa de entrada, mas não para as subpastas da caixa de entrada. Os valores padrão para os argumentos opcionais são:</para>
          <list type="table">
            <item>
              <description>Parâmetro</description>
              <description>Valor padrão</description>
            </item>
            <item>
              <description>ShowProgress</description>
              <description>False</description>
            </item>
            <item>
              <description>Folder</description>
              <description>Caixa de Entrada</description>
            </item>
            <item>
              <description>IncludeSubfolders</description>
              <description>False</description>
            </item>
            <item>
              <description>RuleExecuteOption</description>
              <description>
                <b>OlRuleExecuteOption.olRuleExecuteAllMessages</b>
              </description>
            </item>
          </list>
          <para>Se <paramref name="ShowProgress" /> for <b>verdadeiro</b> , e o usuário cancela a caixa de diálogo de progresso, execução da regra será cancelada da mesma maneira como se o usuário teve cancelou a execução por meio das regras e alertas Assistente da regra. Execute retornará um erro quando o usuário cancela a caixa de diálogo de progresso.</para>
          <para>Se você planeja mostrar uma interface de usuário de progresso personalizada em vez de usar a caixa de diálogo de progresso, deverá estar ciente de que não há eventos que indicam quando uma execução de regra é iniciada ou interrompida.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionOrder">
      <MemberSignature Language="C#" Value="public int ExecutionOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExecutionOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.ExecutionOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExecutionOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna ou define um valor <b>inteiro</b> (<b>int</b> em c#) que indica a ordem de execução da regra entre outras regras no <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> conjunto. Leitura/gravação.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>ExecutionOrder</b> é mapeado diretamente com o valor numérico da <paramref name="Index" /> em <see cref="P:Microsoft.Office.Interop.Outlook._Rules.Item(System.Object)" />. Por exemplo, Rules.Item(1) representa uma regra com <b>ExecutionOrder</b> sendo 1, Rules.Item(2) representa uma regra com <b>ExecutionOrder</b> sendo 2 e Rules.Item(Rules.Count) representa a regra com <b>ExecutionOrder</b> sendo <see cref="P:Microsoft.Office.Interop.Outlook._Rules.Count" />.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalRule">
      <MemberSignature Language="C#" Value="public bool IsLocalRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalRule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.IsLocalRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocalRule As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocalRule { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <b>Boolean</b> (<b>bool</b> em c#) que indica se a regra executa como uma regra do cliente. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>Uma regra do cliente é executada somente quando o Outlook está sendo executado. Se <b>IsLocalRule</b> for <b>False</b>, a regra executa como uma regra do lado do servidor.</para>
          <para>Se você tiver uma conta de email do Microsoft Exchange Server, o servidor poderá aplicar as regras do lado do servidor às suas mensagens, mesmo que o Outlook não esteja em execução. As regras deverão ser aplicadas às mensagens quando elas forem entregues na Caixa de Entrada no servidor, e as regras têm que ser executadas até a conclusão no servidor. Por exemplo, uma regra não poderá ser executada até sua conclusão no servidor se a ação especificar que a mensagem será impressa. Se uma regra não puder ser aplicada no servidor, ela será aplicada quando o Outlook for iniciado.</para>
          <para>Se o conjunto de regras em um repositório contiver regras do lado do cliente e do servidor, as regras do lado do servidor serão aplicadas primeiro, seguidas pelas regras do lado do cliente.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna ou define uma <b>cadeia de caracteres</b> (<b>cadeia de caracteres</b> em c#) que representa o nome da regra. Leitura/gravação.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>Name</b> é a propriedade padrão e um indexador para uma regra em um <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> objeto da coleção. Ela corresponde ao <b>PidTagRuleMsgName</b> (0x65EC001E).</para>
          <para>Os nomes das regras não são exclusivos dentre as regras no mesmo conjunto.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o pai do <b>objeto</b> do objeto especificado. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>O pai do <see cref="T:Microsoft.Office.Interop.Outlook.Rule" /> objeto é o <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> objeto.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlRuleType RuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlRuleType RuleType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.RuleType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleType As OlRuleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlRuleType RuleType { Microsoft::Office::Interop::Outlook::OlRuleType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlRuleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna uma constante do <see cref="T:Microsoft.Office.Interop.Outlook.OlRuleType" /> enumeração que indica se a regra será aplicada às mensagens que estão sendo enviadas ou recebidas. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para a sessão atual. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks><para>A propriedade <b>Session</b> e o <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método pode ser usado de forma intercambiável para obter o objeto <b>NameSpace</b> para a sessão atual. Ambos os membros têm a mesma finalidade. Por exemplo, os seguintes pares de instruções executam a mesma função:</para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
